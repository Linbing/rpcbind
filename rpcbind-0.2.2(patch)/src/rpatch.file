--- rpcbind_or.c	2015-03-13 16:19:39.077441495 +0300
+++ rpcbind.c	2015-03-13 16:16:03.129398043 +0300
@@ -62,6 +62,7 @@
 #include <fcntl.h>
 #include <netdb.h>
 #include <stdio.h>
+#include <sys/stat.h>
 #include <netconfig.h>
 #include <stdlib.h>
 #include <unistd.h>
@@ -103,7 +104,9 @@
 /* who to suid to if -s is given */
 #define RUN_AS  "daemon"
 
-#define RPCBINDDLOCK "/var/run/rpcbind.lock"
+char RPCBINDDLOCK[23 + 64] = "/var/run/lock/rpcbind";
+char netns[64];
+int ignore = 1;
 
 int runasdaemon = 0;
 int insecure = 0;
@@ -145,16 +148,46 @@
 	void *nc_handle;	/* Net config handle */
 	struct rlimit rl;
 	int maxrec = RPC_MAXDATASIZE;
-
+	char logfile[8 + 16] = "rpcbind";
+	char path_netns[15 + 64] = "/var/run/netns/";
+	int fildis = -1;
 	parseargs(argc, argv);
 
+	//getting nents process 
+	if(*netns == 0) {
+		char cmd[18 + 10] = "ip netns identify ";
+		sprintf(cmd + 18, "%d", getpid());
+   		FILE *ptr;
+   		if ((ptr = popen(cmd, "r")) != NULL)
+      	 	fscanf(ptr, "%s", netns);
+    	(void) pclose(ptr);
+    	if((fildis = open("/proc/1/ns/net", O_RDONLY)) != 0)
+    		errx(1, "not open /proc/1/ns/net for open RPCbind in default namespace. Aborting"); 
+  	} else {
+		mkdir(path_netns, O_CREAT);
+		strcat(path_netns, netns);
+		if((fildis = open(path_netns, O_RDONLY)) == -1 || setns(fildis, 0) == -1) 
+			errx(1, "not exist namespace: [%s]. Aborting", netns);
+  	}
+
+	if(ignore == 0) {
+		struct stat info_file;	
+		strcat(logfile, ".");
+	  	fstat(fildis, &info_file);
+	  	sprintf(logfile + 8, "%u", info_file.st_ino);
+	}
+
+	strcat(RPCBINDDLOCK, netns);
+	strcat(RPCBINDDLOCK, ".lock");
+
 	/* Check that another rpcbind isn't already running. */
+
 	if ((rpcbindlockfd = (open(RPCBINDDLOCK,
 	    O_RDONLY|O_CREAT, 0444))) == -1)
 		err(1, "%s", RPCBINDDLOCK);
 
 	if(flock(rpcbindlockfd, LOCK_EX|LOCK_NB) == -1 && errno == EWOULDBLOCK)
-		errx(1, "another rpcbind is already running. Aborting");
+		errx(1, "another rpcbind is already running in this namespace. Aborting");
 
 	getrlimit(RLIMIT_NOFILE, &rl);
 	if (rl.rlim_cur < 128) {
@@ -164,7 +197,8 @@
 			rl.rlim_cur = 128;
 		setrlimit(RLIMIT_NOFILE, &rl);
 	}
-	openlog("rpcbind", LOG_CONS, LOG_DAEMON);
+	
+	openlog(logfile, LOG_CONS, LOG_DAEMON);
 	if (geteuid()) { /* This command allowed only to root */
 		fprintf(stderr, "Sorry. You are not superuser\n");
 		exit(1);
@@ -822,7 +856,7 @@
 {
 	int c;
 	oldstyle_local = 1;
-	while ((c = getopt(argc, argv, "adh:ilswf")) != -1) {
+	while ((c = getopt(argc, argv, "adh:ilswfng")) != -1) {
 		switch (c) {
 		case 'a':
 			doabort = 1;	/* when debugging, do an abort on */
@@ -852,14 +886,21 @@
 		case 'f':
 			dofork = 0;
 			break;
+		case 'g':
+			ignore = 0;
+			break;
+		case 'n':
+			if(argc == optind) errx(1, "Netns is not written");
+			strcpy(netns, argv[optind]);
+			break;
+
 #ifdef WARMSTART
 		case 'w':
 			warmstart = 1;
 			break;
 #endif
 		default:	/* error */
-			fprintf(stderr,	"usage: rpcbind [-adhilswf]\n");
-			exit (1);
+			break;
 		}
 	}
 	if (doabort && !debugging) {
